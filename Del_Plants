wait(60)
_G.KeepAmount = {
    ["Lily of the Valley"] = 2,
    Lilac = 2,
    Nectarine = 2,
    ["Bitter Melon"] = 2,
    Gleamroot = 2,
    Serenity = 2,
    Guanabana = 2,
    ["Grand Volcania"] = 2,
    ["Rosy Delight"] = 2,
    ["Parasol Flower"] = 2,
    ["Canary Melon"] = 2,
    Wispwing = 2,
    ["Badlands Pepper"] = 2,
    ["Nectar Thorn"] = 2,
    Amberheart = 2,
    Romanesco = 2,
    ["Amber Spine"] = 2,
    Sunflower = 2,
    Bendboo = 2,
    Mushroom = 2,
    ["Zen Rocks"] = 2,
    ["Firefly Fern"] = 2,
    Boneboo = 2,
    ["Burning Bud"] = 2,
    Lingonberry = 2,
    ["Butternut Squash"] = 2,
    ["Spirit Flower"] = 2,
    ["Soft Sunshine"] = 2,
    Cocovine = 2,
    ["Lucky Bamboo"] = 2,
    ["Meyer Lemon"] = 2,
    Pyracantha = 2,
    Enkaku = 2,
    Lightshoot = 2,
    ["Aurora Vine"] = 2,
    ["Taro Flower"] = 2,
    ["King Cabbage"] = 2,
    ["Princess Thorn"] = 2,
    Kniphofia = 2,
    Aetherfruit = 2,
    ["Snaparino Beanarini"] = 2,
    Duskpuff = 2,
    ["Tall Asparagus"] = 2,
    ["Crown Melon"] = 2,
    Honeysuckle = 2
    Cacao = 5,
    Sunbulb = 5,
    Mango = 5,
    Coconut = 5,
    Apple = 5,
    ["Dragon Fruit"] = 5,
    Tomato = 5,
    Blueberry = 5,
    Strawberry = 5,
    ["Corpse Flower"] = 5,
    ["Inferno Quince"] = 5,
    ["Urchin Plant"] = 5,
    ["Evo Beetroot IV"] = 5,
    ["Evo Blueberry IV"] = 5,
    ["Evo Pumpkin IV"] = 5,
    ["Evo Mushroom IV"] = 5,
}

_G.Treelist = {
    "Bone Blossom",
    "Candy Blossom",
    "Moon Melon",
    "Maple Apple",
    "Cocomango",
    "Crimson Thorn",
    ["Maple Resin"] = 9,
    ["Spiked Mango"] = 9,
    ["Traveler's Fruit"] = 9,
    ["Dragon Pepper"] = 9,
    ["Fossilight"] = 9,
    ["Elephant Ears"] = 7,
    ["Giant Pinecone"] = 7,
    ["Sugar Apple"] = 7,
    ["Tranquil Bloom"] = 7,
    ["Potato"] = 7,
    ["Brussels Sprout"] = 5,
    ["Moon Blossom"] = 5,
    ["Golden Peach"] = 5,
    ["Poseidon Plant"] = 5,
    ["Hive Fruit"] = 5,
    ["Beanstalk"] = 5,
    ["Moon Mango"] = 5,
    ["Mangrove"] = 5,
    ["Elder Strawberry"] = 5
    ["Multitrap"] = 5
}

_G.Remove = true
_G.MaxPlants = 168
local DEFAULT_KEEP = 0

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local player = Players.LocalPlayer

-- tìm plot của người chơi
local function getOwnedPlot()
    for _, plot in pairs(workspace.Farm:GetChildren()) do
        local important = plot:FindFirstChild("Important") or plot:FindFirstChild("Importanert")
        if important then
            local data = important:FindFirstChild("Data")
            if data and data:FindFirstChild("Owner") and data.Owner.Value == player.Name then
                return plot
            end
        end
    end
    return nil
end

local function EquipShovel()
    local backpack = player:FindFirstChild("Backpack")
    local character = player.Character
    local shovel = nil
    if backpack then
        shovel = backpack:FindFirstChild("Shovel [Destroy Plants]") 
    end
    if not shovel and character then
        shovel = character:FindFirstChild("Shovel [Destroy Plants]")
    end
    if shovel and character and shovel.Parent ~= character then
        shovel.Parent = character
    end
end

-- kiểm tra tên có trong Treelist array
local function isNameInTreelistArray(name)
    for k, v in pairs(_G.Treelist) do
        if type(k) == "number" and v == name then
            return true
        end
    end
    return false
end

-- Đếm tổng số cây
local function countPlants(plot)
    local total = 0
    local typeCounts = {}
    if not plot or not plot:FindFirstChild("Important") then
        return 0, typeCounts
    end
    local plantsFolder = plot.Important:FindFirstChild("Plants_Physical")
    if not plantsFolder then
        return 0, typeCounts
    end
    for _, plant in pairs(plantsFolder:GetChildren()) do
        if plant:IsA("Model") then
            total = total + 1
            local name = plant.Name
            typeCounts[name] = (typeCounts[name] or 0) + 1
        end
    end
    return total, typeCounts
end

local processing = false
local function DestroyTree()
    if processing then return end
    processing = true

    local ok, err = pcall(function()
        if not _G.Remove then return end

        local plot = getOwnedPlot()
        if not plot then return end

        local plantsFolder = plot.Important and plot.Important:FindFirstChild("Plants_Physical")
        if not plantsFolder then return end

        local total, typeCounts = countPlants(plot)
        if total <= (_G.MaxPlants or 120) then
            return
        end

        EquipShovel()

        for _, plant in pairs(plantsFolder:GetChildren()) do
            if total <= (_G.MaxPlants or 120) then break end
            if not plant:IsA("Model") then
                -- skip
            else
                local name = plant.Name

                local keepNum
                -- 1) Nếu Treelist[name] là số → giữ số đó
                if type(_G.Treelist[name]) == "number" then
                    keepNum = _G.Treelist[name]
                -- 2) Nếu name có trong Treelist array → giữ full (không xóa)
                elseif isNameInTreelistArray(name) then
                    keepNum = math.huge -- không xóa
                -- 3) Nếu KeepAmount có → giữ số đó
                elseif _G.KeepAmount and _G.KeepAmount[name] ~= nil then
                    keepNum = _G.KeepAmount[name]
                else
                    keepNum = DEFAULT_KEEP
                end

                local currentOfType = typeCounts[name] or 0
                if currentOfType > keepNum then
                    local part = plant.PrimaryPart or plant:FindFirstChildWhichIsA("BasePart")
                    if part then
                        ReplicatedStorage.GameEvents.Remove_Item:FireServer(part)
                        total = total - 1
                        typeCounts[name] = currentOfType - 1
                        print("[AutoRemove] Removed:", name, "- remaining total:", total, "- remaining of type:", typeCounts[name])
                        task.wait(0.05)
                    end
                end
            end
        end
    end)

    if not ok then
        warn("Lỗi khi xóa cây: " .. tostring(err))
    end

    processing = false
end

while task.wait(0.5) do
    DestroyTree()
end
